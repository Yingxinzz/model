import scanpy as sc
import umap
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings("ignore")

reducer = umap.UMAP(
    n_components=2,
    metric="correlation",
    learning_rate=1.0,
    min_dist=0.3,
    spread=1.0,
    set_op_mix_ratio=1.0,
    local_connectivity=1,
    repulsion_strength=1,
    negative_sample_rate=5,
    random_state=1234,
    verbose=True
)
##################DLPFC-Sample1
adata_raw = sc.read_h5ad('raw_adata1.h5ad')
adata_PRECAST = sc.read_h5ad('../PRECAST/dlpfc/results/1dlpfc_seuInt_with_all_spatial.h5ad')
adata_DeepST = sc.read_h5ad("../DeepST/Results/multiple_adata.h5ad")
adata_STAligner = sc.read_h5ad('../STAligner/results/staligner_Sample1_DLPFC.h5ad')
adata_GraphST = sc.read_h5ad("../GraphST/results/DLPFC_adata.h5ad")
adata_SPIRAL = sc.read_h5ad('../SPIRAL/results/spiral_Sample1_DLPFC.h5ad')
adata_STitch3D = sc.read_h5ad("../STitch3D/results_dlpfc1/DLPFC_adata.h5ad")
adata_Spatialign = sc.read_h5ad("../Spatialign/results_dlpfc1/multiple_adata1.h5ad")
def create_layer_palette(adata):
    if 'layer' in adata.obs:
        return sns.color_palette("Set2", n_colors=len(adata.obs['layer'].unique()))
    else:
        print(f"No 'layer' column found in {adata}. Using default palette.")
        return sns.color_palette("Set2", n_colors=10)  # Default to 10 colors if 'layer' is missing

import matplotlib.pyplot as plt
import scanpy as sc

def plot_all_umaps():
    spot_size = 100
    fig, ax_list = plt.subplots(4, 8, figsize=(40, 20))
    ax_list = ax_list.flatten()
    plt.subplots_adjust(hspace=1.0, wspace=0.4)
    # ---- A 部分：UMAP 图 ----
    sc.pp.neighbors(adata_raw, use_rep='X', random_state=666)
    sc.tl.umap(adata_raw, random_state=666)
    sc.pl.umap(adata_raw, color='batch', title='RAW_Uncorrected', ax=ax_list[0], show=False)
    ax_list[0].set_title('RAW_Uncorrected', fontsize=30)  
    sc.pp.neighbors(adata_PRECAST, use_rep='PRECAST', random_state=666)
    sc.tl.umap(adata_PRECAST, random_state=666)
    sc.pl.umap(adata_PRECAST, color='new_batch', ax=ax_list[1], title='PRECAST', show=False)
    ax_list[1].set_title('PRECAST', fontsize=30)  
    sc.pp.neighbors(adata_DeepST, use_rep='DeepST_embed', random_state=666)
    sc.tl.umap(adata_DeepST, random_state=666)
    sc.pl.umap(adata_DeepST, color='batch_name', ax=ax_list[2], title='DeepST', show=False)
    ax_list[2].set_title('DeepST', fontsize=30)  
    sc.pp.neighbors(adata_STAligner, use_rep='STAligner', random_state=666)
    sc.tl.umap(adata_STAligner, random_state=666)
    sc.pl.umap(adata_STAligner, color='batch_name', title='STAligner', ax=ax_list[3], show=False)
    ax_list[3].set_title('STAligner', fontsize=30)  
    sc.pp.neighbors(adata_GraphST, use_rep='emb_pca', n_neighbors=10, random_state=666)
    sc.tl.umap(adata_GraphST, random_state=666)
    sc.pl.umap(adata_GraphST, color='new_batch', ax=ax_list[4], title='GraphST', show=False)
    ax_list[4].set_title('GraphST', fontsize=30)  
    sc.pp.neighbors(adata_SPIRAL, use_rep='spiral', random_state=666)
    sc.tl.umap(adata_SPIRAL, random_state=666)
    sc.pl.umap(adata_SPIRAL, color='batch', ax=ax_list[5], title='SPIRAL', show=False)
    ax_list[5].set_title('SPIRAL', fontsize=30)  
    sc.pp.neighbors(adata_STitch3D, use_rep='latent', n_neighbors=30, random_state=666)
    adata_STitch3D.obsm['X_umap'] = reducer.fit_transform(adata_STitch3D.obsm['latent'])
    sc.pl.umap(adata_STitch3D, color='slice_id', title='STitch3D', ax=ax_list[6], show=False)
    ax_list[6].set_title('STitch3D', fontsize=30)      
    sc.pp.neighbors(adata_Spatialign, use_rep='correct', random_state=666)
    sc.tl.umap(adata_Spatialign, random_state=666)
    sc.pl.umap(adata_Spatialign, color='new_batch', ax=ax_list[7], title='Spatialign', show=False)
    ax_list[7].set_title('Spatialign', fontsize=30)  
    # ---- B 部分：Layer 对比图 ----
    layer_palette_raw = create_layer_palette(adata_raw)
    layer_palette_PRECAST = create_layer_palette(adata_PRECAST)
    layer_palette_DeepST = create_layer_palette(adata_DeepST)
    layer_palette_STAligner = create_layer_palette(adata_STAligner)
    layer_palette_GraphST = create_layer_palette(adata_GraphST)
    layer_palette_SPIRAL = create_layer_palette(adata_SPIRAL)
    layer_palette_STitch3D = create_layer_palette(adata_STitch3D)
    layer_palette_Spatialign = create_layer_palette(adata_Spatialign)
    sc.pl.umap(adata_raw, color='celltype', ax=ax_list[8], palette=layer_palette_raw, title='RAW', show=False)
    ax_list[8].set_title('RAW', fontsize=30)  
    sc.pl.umap(adata_PRECAST, color='Ground_Truth', ax=ax_list[9], palette=layer_palette_PRECAST, title='PRECAST', show=False)
    ax_list[9].set_title('PRECAST', fontsize=30)  
    sc.pl.umap(adata_DeepST, color='ground_truth', ax=ax_list[10], palette=layer_palette_DeepST, title='DeepST', show=False)
    ax_list[10].set_title('DeepST', fontsize=30)  
    sc.pl.umap(adata_STAligner, color='Ground_Truth', ax=ax_list[11], palette=layer_palette_STAligner, title='STAligner', show=False)
    ax_list[11].set_title('STAligner', fontsize=30)  
    sc.pl.umap(adata_GraphST, color='ground_truth', ax=ax_list[12], palette=layer_palette_GraphST, title='GraphST', show=False)
    ax_list[12].set_title('GraphST', fontsize=30)  
    sc.pl.umap(adata_SPIRAL, color='celltype', ax=ax_list[13], palette=layer_palette_SPIRAL, title='SPIRAL', show=False)
    ax_list[13].set_title('SPIRAL', fontsize=30)  
    sc.pl.umap(adata_STitch3D, color='layer', ax=ax_list[14], palette=layer_palette_STitch3D, title='STitch3D', show=False)
    ax_list[14].set_title('STitch3D', fontsize=30)  
    sc.pl.umap(adata_Spatialign, color='celltype', ax=ax_list[15], palette=layer_palette_Spatialign, title='Spatialign', show=False)
    ax_list[15].set_title('Spatialign', fontsize=30)  
    # ---- C 部分：Clustering 对比图 ----
    sc.pl.umap(adata_raw, color='mclust', ax=ax_list[16], title='RAW', show=False)
    ax_list[16].set_title('RAW', fontsize=30)  
    sc.pl.umap(adata_PRECAST, color='cluster', ax=ax_list[17], title='PRECAST_leiden', show=False)
    ax_list[17].set_title('PRECAST_leiden', fontsize=30)  
    sc.pl.umap(adata_DeepST, color='DeepST_refine_domain', ax=ax_list[30], title='DeepST', show=False)
    ax_list[30].set_title('DeepST', fontsize=30)  
    sc.pl.umap(adata_STAligner, color='mclust', ax=ax_list[19], title='STAligner_mclust', show=False)
    ax_list[19].set_title('STAligner_mclust', fontsize=30)  
    sc.pl.umap(adata_GraphST, color='domain', ax=ax_list[20], title='GraphST', show=False)
    ax_list[20].set_title('GraphST', fontsize=30)  
    sc.pl.umap(adata_SPIRAL, color='mclust', ax=ax_list[21], title='SPIRAL_mclust', show=False)
    ax_list[21].set_title('SPIRAL_mclust', fontsize=30)  
    sc.pl.umap(adata_STitch3D, color='Cluster', ax=ax_list[22], title='STitch3D_GM', show=False)
    ax_list[22].set_title('STitch3D_GM', fontsize=30)  
    sc.pl.umap(adata_Spatialign, color='mclust', ax=ax_list[23], title='Spatialign_GM', show=False)
    ax_list[23].set_title('Spatialign_GM', fontsize=30)  
    # ---- D 部分：Spatial 对比图 ----
    sc.pl.spatial(adata_raw, color='mclust', ax=ax_list[24], title='RAW', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[24].set_title('RAW', fontsize=30)  
    sc.pl.spatial(adata_PRECAST, color='cluster', ax=ax_list[25], title='PRECAST', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[25].set_title('PRECAST', fontsize=30)  
    sc.pl.spatial(adata_DeepST, color='DeepST_refine_domain', ax=ax_list[26], title='DeepST', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[26].set_title('DeepST', fontsize=30)      
    sc.pl.spatial(adata_STAligner, color='mclust', ax=ax_list[27], title='STAligner', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[27].set_title('STAligner', fontsize=30)  
    sc.pl.spatial(adata_GraphST, color='domain', ax=ax_list[28], title='GraphST', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[28].set_title('GraphST', fontsize=30)  
    sc.pl.spatial(adata_SPIRAL, color='mclust', ax=ax_list[29], title='SPIRAL', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[29].set_title('SPIRAL', fontsize=30)  
    sc.pl.spatial(adata_STitch3D, color='Cluster', ax=ax_list[30], title='STitch3D', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[30].set_title('STitch3D', fontsize=30)      
    sc.pl.spatial(adata_Spatialign, color='mclust', ax=ax_list[31], title='Spatialign', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[31].set_title('Spatialign', fontsize=30)  
    handles, labels = ax_list[0].get_legend_handles_labels()
    fig.legend(handles, labels, loc='center left', bbox_to_anchor=(1.05, 0.5), ncol=1)
    plt.tight_layout(rect=[0, 0, 1, 1])
    plt.savefig('../results/umap_comparisonDLPFC1.png')
    print('Saved all UMAP comparisons to one image.')

plot_all_umaps()


##################DLPFC-Sample2
adata_raw=sc.read_h5ad('raw_adata2.h5ad')
adata_PRECAST = sc.read_h5ad('../PRECAST/dlpfc/results/2dlpfc_seuInt_with_all_spatial.h5ad')
adata_DeepST = ad.read_h5ad("../DeepST/Results/multiple_adata2.h5ad")
adata_STAligner = sc.read_h5ad('../STAligner/results/staligner_Sample2_DLPFC.h5ad')
adata_GraphST = ad.read_h5ad("../GraphST/results/DLPFC_adata2.h5ad")
adata_SPIRAL = sc.read_h5ad('../SPIRAL/results/spiral_Sample2_DLPFC.h5ad')
adata_STitch3D = ad.read_h5ad("../STitch3D/results_dlpfc2/DLPFC_adata2.h5ad")
adata_Spatialign = sc.read_h5ad("../Spatialign/results_dlpfc2/multiple_adata2.h5ad")
def create_layer_palette(adata):
    if 'layer' in adata.obs:
        return sns.color_palette("Set2", n_colors=len(adata.obs['layer'].unique()))
    else:
        print(f"No 'layer' column found in {adata}. Using default palette.")
        return sns.color_palette("Set2", n_colors=10)  # Default to 10 colors if 'layer' is missing

def plot_all_umaps():
    spot_size = 100
    fig, ax_list = plt.subplots(4, 8, figsize=(40, 20))
    ax_list = ax_list.flatten()
    plt.subplots_adjust(hspace=1.0, wspace=0.4)
    # ---- A 部分：UMAP 图 ----
    sc.pp.neighbors(adata_raw, use_rep='X', random_state=666)
    sc.tl.umap(adata_raw, random_state=666)
    sc.pl.umap(adata_raw, color='batch', title='RAW_Uncorrected', ax=ax_list[0], show=False)
    
    sc.pp.neighbors(adata_PRECAST, use_rep='PRECAST', random_state=666)
    sc.tl.umap(adata_PRECAST, random_state=666)
    sc.pl.umap(adata_PRECAST, color='new_batch', ax=ax_list[1], title='PRECAST', show=False)
    
    sc.pp.neighbors(adata_DeepST, use_rep='DeepST_embed', random_state=666)
    sc.tl.umap(adata_DeepST, random_state=666)
    sc.pl.umap(adata_DeepST, color='batch_name', ax=ax_list[2], title='DeepST', show=False)
    
    sc.pp.neighbors(adata_STAligner, use_rep='STAligner', random_state=666)
    sc.tl.umap(adata_STAligner, random_state=666)
    sc.pl.umap(adata_STAligner, color='batch_name', title='STAligner', ax=ax_list[3], show=False)
    
    sc.pp.neighbors(adata_GraphST, use_rep='emb_pca', n_neighbors=10, random_state=666)
    sc.tl.umap(adata_GraphST, random_state=666)
    sc.pl.umap(adata_GraphST, color='new_batch', ax=ax_list[4], title='GraphST', show=False)
    
    sc.pp.neighbors(adata_SPIRAL, use_rep='spiral', random_state=666)
    sc.tl.umap(adata_SPIRAL, random_state=666)
    sc.pl.umap(adata_SPIRAL, color='batch', ax=ax_list[5], title='SPIRAL', show=False)
    
    sc.pp.neighbors(adata_STitch3D, use_rep='latent', n_neighbors=30, random_state=666)
    adata_STitch3D.obsm['X_umap'] = reducer.fit_transform(adata_STitch3D.obsm['latent'])
    sc.pl.umap(adata_STitch3D, color='slice_id', title='STitch3D', ax=ax_list[6], show=False)
    
    sc.pp.neighbors(adata_Spatialign, use_rep='correct', random_state=666)
    sc.tl.umap(adata_Spatialign, random_state=666)
    sc.pl.umap(adata_Spatialign, color='new_batch', ax=ax_list[7], title='Spatialign', show=False)
    ax_list[0].text(0.05, 1.05, 'E', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[0].transAxes)
    # ---- B 部分：Layer 对比图 ----
    layer_palette_raw = create_layer_palette(adata_raw)
    layer_palette_PRECAST = create_layer_palette(adata_PRECAST)
    layer_palette_DeepST = create_layer_palette(adata_DeepST)
    layer_palette_STAligner = create_layer_palette(adata_STAligner)
    layer_palette_GraphST = create_layer_palette(adata_GraphST)
    layer_palette_SPIRAL = create_layer_palette(adata_SPIRAL)
    layer_palette_STitch3D = create_layer_palette(adata_STitch3D)
    layer_palette_Spatialign = create_layer_palette(adata_Spatialign)
    sc.pl.umap(adata_raw, color='celltype', ax=ax_list[8], palette=layer_palette_raw, title='RAW', show=False)
    sc.pl.umap(adata_PRECAST, color='Ground_Truth', ax=ax_list[9], palette=layer_palette_PRECAST, title='PRECAST', show=False)
    sc.pl.umap(adata_DeepST, color='ground_truth', ax=ax_list[10], palette=layer_palette_DeepST, title='DeepST', show=False)
    sc.pl.umap(adata_STAligner, color='Ground_Truth', ax=ax_list[11], palette=layer_palette_STAligner, title='STAligner', show=False)
    sc.pl.umap(adata_GraphST, color='ground_truth', ax=ax_list[12], palette=layer_palette_GraphST, title='GraphST', show=False)
    sc.pl.umap(adata_SPIRAL, color='celltype', ax=ax_list[13], palette=layer_palette_SPIRAL, title='SPIRAL', show=False)
    sc.pl.umap(adata_STitch3D, color='layer', ax=ax_list[14], palette=layer_palette_STitch3D, title='STitch3D', show=False)
    sc.pl.umap(adata_Spatialign, color='celltype', ax=ax_list[15], palette=layer_palette_Spatialign, title='Spatialign', show=False)
    ax_list[8].text(0.05, 1.05, 'F', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[8].transAxes)
    # ---- C 部分：Clustering 对比图 ----
    sc.pl.umap(adata_raw, color='mclust', ax=ax_list[16], title='RAW', show=False)
    sc.pl.umap(adata_PRECAST, color='cluster', ax=ax_list[17], title='PRECAST_leiden', show=False)
    sc.pl.umap(adata_DeepST, color='DeepST_refine_domain', ax=ax_list[18], title='DeepST', show=False)
    sc.pl.umap(adata_STAligner, color='mclust', ax=ax_list[19], title='STAligner_mclust', show=False)
    sc.pl.umap(adata_GraphST, color='domain', ax=ax_list[20], title='GraphST', show=False)
    sc.pl.umap(adata_SPIRAL, color='mclust', ax=ax_list[21], title='SPIRAL_mclust', show=False)
    sc.pl.umap(adata_STitch3D, color='Cluster', ax=ax_list[22], title='STitch3D_GM', show=False)
    sc.pl.umap(adata_Spatialign, color='mclust', ax=ax_list[23], title='Spatialign_GM', show=False)    
    ax_list[16].text(0.05, 1.05, 'G', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[16].transAxes)
    # ---- D 部分：Spatial 对比图 ----
    sc.pl.spatial(adata_raw, color='mclust', ax=ax_list[24], title='RAW', spot_size=spot_size, cmap='viridis', show=False)
    sc.pl.spatial(adata_PRECAST, color='cluster', ax=ax_list[25], title='PRECAST', spot_size=spot_size, cmap='viridis', show=False)
    sc.pl.spatial(adata_DeepST, color='DeepST_refine_domain', ax=ax_list[26], title='DeepST', spot_size=spot_size, cmap='viridis', show=False)
    sc.pl.spatial(adata_STAligner, color='mclust', ax=ax_list[27], title='STAligner', spot_size=spot_size, cmap='viridis', show=False)
    sc.pl.spatial(adata_GraphST, color='domain', ax=ax_list[28], title='GraphST', spot_size=spot_size, cmap='viridis', show=False)
    sc.pl.spatial(adata_SPIRAL, color='mclust', ax=ax_list[29], title='SPIRAL', spot_size=spot_size, cmap='viridis', show=False)
    sc.pl.spatial(adata_STitch3D, color='Cluster', ax=ax_list[30], title='STitch3D', spot_size=spot_size, cmap='viridis', show=False)
    sc.pl.spatial(adata_Spatialign, color='mclust', ax=ax_list[31], title='Spatialign', spot_size=spot_size, cmap='viridis', show=False)
    
    ax_list[24].text(0.05, 1.05, 'H', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[24].transAxes)
    handles, labels = ax_list[0].get_legend_handles_labels()
    fig.legend(handles, labels, loc='center left', bbox_to_anchor=(1.05, 0.5), ncol=1)
    plt.tight_layout(rect=[0, 0, 1, 1])
    plt.savefig('../results/umap_comparisonDLPFC2.png')
    print('Saved all UMAP comparisons to one image.')

plot_all_umaps()

##################DLPFC-Sample3
adata_raw=sc.read_h5ad('raw_adata3.h5ad')
adata_PRECAST = sc.read_h5ad('../PRECAST/dlpfc/results/3dlpfc_seuInt_with_all_spatial.h5ad')
adata_DeepST = ad.read_h5ad("../DeepST/Results/multiple_adata3.h5ad")
adata_STAligner = sc.read_h5ad('../STAligner/results/staligner_Sample3_DLPFC.h5ad')
adata_GraphST = ad.read_h5ad("../GraphST/results/DLPFC_adata3.h5ad")
adata_SPIRAL = sc.read_h5ad('../SPIRAL/results/spiral_Sample3_DLPFC.h5ad')
adata_STitch3D = ad.read_h5ad("../STitch3D/results_dlpfc3/DLPFC_adata3.h5ad")
adata_Spatialign = sc.read_h5ad("../Spatialign/results_dlpfc3/multiple_adata3.h5ad")
def create_layer_palette(adata):
    if 'layer' in adata.obs:
        return sns.color_palette("Set2", n_colors=len(adata.obs['layer'].unique()))
    else:
        print(f"No 'layer' column found in {adata}. Using default palette.")
        return sns.color_palette("Set2", n_colors=10)  # Default to 10 colors if 'layer' is missing

def plot_all_umaps():
    spot_size = 100
    fig, ax_list = plt.subplots(4, 8, figsize=(40, 20))
    ax_list = ax_list.flatten()
    plt.subplots_adjust(hspace=1.0, wspace=0.4)
    # ---- A 部分：UMAP 图 ----
    sc.pp.neighbors(adata_raw, use_rep='X', random_state=666)
    sc.tl.umap(adata_raw, random_state=666)
    sc.pl.umap(adata_raw, color='batch', title='RAW_Uncorrected', ax=ax_list[0], show=False)
    ax_list[0].set_title('RAW_Uncorrected', fontsize=30)
    sc.pp.neighbors(adata_PRECAST, use_rep='PRECAST', random_state=666)
    sc.tl.umap(adata_PRECAST, random_state=666)
    sc.pl.umap(adata_PRECAST, color='new_batch', ax=ax_list[1], show=False)
    ax_list[1].set_title('PRECAST', fontsize=30)
    sc.pp.neighbors(adata_DeepST, use_rep='DeepST_embed', random_state=666)
    sc.tl.umap(adata_DeepST, random_state=666)
    sc.pl.umap(adata_DeepST, color='batch_name', ax=ax_list[2], show=False)
    ax_list[2].set_title('DeepST', fontsize=30)
    sc.pp.neighbors(adata_STAligner, use_rep='STAligner', random_state=666)
    sc.tl.umap(adata_STAligner, random_state=666)
    sc.pl.umap(adata_STAligner, color='batch_name', title='STAligner', ax=ax_list[3], show=False)
    ax_list[3].set_title('STAligner', fontsize=30)    
    sc.pp.neighbors(adata_GraphST, use_rep='emb_pca', n_neighbors=10, random_state=666)
    sc.tl.umap(adata_GraphST, random_state=666)
    sc.pl.umap(adata_GraphST, color='new_batch', ax=ax_list[4], show=False)
    ax_list[4].set_title('GraphST', fontsize=30)
    sc.pp.neighbors(adata_SPIRAL, use_rep='spiral', random_state=666)
    sc.tl.umap(adata_SPIRAL, random_state=666)
    sc.pl.umap(adata_SPIRAL, color='batch', ax=ax_list[5], show=False)
    ax_list[5].set_title('SPIRAL', fontsize=30)
    sc.pp.neighbors(adata_STitch3D, use_rep='latent', n_neighbors=30, random_state=666)
    adata_STitch3D.obsm['X_umap'] = reducer.fit_transform(adata_STitch3D.obsm['latent'])
    sc.pl.umap(adata_STitch3D, color='slice_id', title='STitch3D', ax=ax_list[6], show=False)
    ax_list[6].set_title('STitch3D', fontsize=30)
    sc.pp.neighbors(adata_Spatialign, use_rep='correct', random_state=666)
    sc.tl.umap(adata_Spatialign, random_state=666)
    sc.pl.umap(adata_Spatialign, color='new_batch', ax=ax_list[7], show=False)
    ax_list[7].set_title('Spatialign', fontsize=30)
    ax_list[0].text(0.05, 1.05, 'I', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[0].transAxes)
    # ---- B 部分：Layer 对比图 ----
    layer_palette_raw = create_layer_palette(adata_raw)
    layer_palette_PRECAST = create_layer_palette(adata_PRECAST)
    layer_palette_DeepST = create_layer_palette(adata_DeepST)
    layer_palette_STAligner = create_layer_palette(adata_STAligner)
    layer_palette_GraphST = create_layer_palette(adata_GraphST)
    layer_palette_SPIRAL = create_layer_palette(adata_SPIRAL)
    layer_palette_STitch3D = create_layer_palette(adata_STitch3D)
    layer_palette_Spatialign = create_layer_palette(adata_Spatialign)
    sc.pl.umap(adata_raw, color='celltype', ax=ax_list[8], palette=layer_palette_raw, show=False)
    ax_list[8].set_title('RAW', fontsize=30)
    sc.pl.umap(adata_PRECAST, color='Ground_Truth', ax=ax_list[9], palette=layer_palette_PRECAST, show=False)
    ax_list[9].set_title('PRECAST', fontsize=30)
    sc.pl.umap(adata_DeepST, color='ground_truth', ax=ax_list[10], palette=layer_palette_DeepST, show=False)
    ax_list[10].set_title('DeepST', fontsize=30)
    sc.pl.umap(adata_STAligner, color='Ground_Truth', ax=ax_list[11], palette=layer_palette_STAligner, show=False)
    ax_list[11].set_title('STAligner', fontsize=30)
    sc.pl.umap(adata_GraphST, color='ground_truth', ax=ax_list[12], palette=layer_palette_GraphST, show=False)
    ax_list[12].set_title('GraphST', fontsize=30)
    sc.pl.umap(adata_SPIRAL, color='celltype', ax=ax_list[13], palette=layer_palette_SPIRAL, show=False)
    ax_list[13].set_title('SPIRAL', fontsize=30)
    sc.pl.umap(adata_STitch3D, color='layer', ax=ax_list[14], palette=layer_palette_STitch3D, show=False)
    ax_list[14].set_title('STitch3D', fontsize=30)
    sc.pl.umap(adata_Spatialign, color='celltype', ax=ax_list[15], palette=layer_palette_Spatialign, show=False)
    ax_list[15].set_title('Spatialign', fontsize=30)
    ax_list[8].text(0.05, 1.05, 'J', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[8].transAxes)
    # ---- C 部分：Clustering 对比图 ----
    sc.pl.umap(adata_raw, color='mclust', ax=ax_list[16], show=False)
    ax_list[16].set_title('RAW', fontsize=30)
    sc.pl.umap(adata_PRECAST, color='cluster', ax=ax_list[17], show=False)
    ax_list[17].set_title('PRECAST_leiden', fontsize=30)
    sc.pl.umap(adata_DeepST, color='DeepST_refine_domain', ax=ax_list[18], show=False)
    ax_list[18].set_title('DeepST', fontsize=30)
    sc.pl.umap(adata_STAligner, color='mclust', ax=ax_list[19], show=False)
    ax_list[19].set_title('STAligner_mclust', fontsize=30)
    sc.pl.umap(adata_GraphST, color='domain', ax=ax_list[20], show=False)
    ax_list[20].set_title('GraphST', fontsize=30)
    sc.pl.umap(adata_SPIRAL, color='mclust', ax=ax_list[21], show=False)
    ax_list[21].set_title('SPIRAL_mclust', fontsize=30)
    sc.pl.umap(adata_STitch3D, color='Cluster', ax=ax_list[22], show=False)
    ax_list[22].set_title('STitch3D_GM', fontsize=30)
    sc.pl.umap(adata_Spatialign, color='mclust', ax=ax_list[23], show=False)
    ax_list[23].set_title('Spatialign_GM', fontsize=30)
    ax_list[16].text(0.05, 1.05, 'K', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[16].transAxes)
    # ---- D 部分：Spatial 对比图 ----
    sc.pl.spatial(adata_raw, color='mclust', ax=ax_list[24], spot_size=spot_size, cmap='viridis', show=False)
    ax_list[24].set_title('RAW', fontsize=30)
    sc.pl.spatial(adata_PRECAST, color='cluster', ax=ax_list[25], spot_size=spot_size, cmap='viridis', show=False)
    ax_list[25].set_title('PRECAST', fontsize=30)
    sc.pl.spatial(adata_DeepST, color='DeepST_refine_domain', ax=ax_list[26], spot_size=spot_size, cmap='viridis', show=False)
    ax_list[26].set_title('DeepST', fontsize=30)
    sc.pl.spatial(adata_STAligner, color='mclust', ax=ax_list[27], spot_size=spot_size, cmap='viridis', show=False)
    ax_list[27].set_title('STAligner', fontsize=30)
    sc.pl.spatial(adata_GraphST, color='domain', ax=ax_list[28], spot_size=spot_size, cmap='viridis', show=False)
    ax_list[28].set_title('GraphST', fontsize=30)
    sc.pl.spatial(adata_SPIRAL, color='mclust', ax=ax_list[29], spot_size=spot_size, cmap='viridis', show=False)
    ax_list[29].set_title('SPIRAL', fontsize=30)
    sc.pl.spatial(adata_STitch3D, color='Cluster', ax=ax_list[30], spot_size=spot_size, cmap='viridis', show=False)
    ax_list[30].set_title('STitch3D', fontsize=30)
    sc.pl.spatial(adata_Spatialign, color='mclust', ax=ax_list[31], spot_size=spot_size, cmap='viridis', show=False)
    ax_list[31].set_title('Spatialign', fontsize=30)
    ax_list[24].text(0.05, 1.05, 'L', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[24].transAxes)
    handles, labels = ax_list[0].get_legend_handles_labels()
    fig.legend(handles, labels, loc='center left', bbox_to_anchor=(1.05, 0.5), ncol=1)
    plt.tight_layout(rect=[0, 0, 1, 1])
    plt.savefig('../results/umap_comparisonDLPFC3.png')
    print('Saved all UMAP comparisons to one image.')

plot_all_umaps()

##################human breast cancer-Sample4
adata_raw=sc.read_h5ad('raw_adata_bc.h5ad')
adata_PRECAST = sc.read_h5ad('../PRECAST/breast cancer/results/bc_seuInt_with_spatial.h5ad')
adata_DeepST = sc.read_h5ad("../DeepST/Results/adata_DeepST.h5ad")
adata_STAligner = sc.read_h5ad('../STAligner/results/staligner_bc.h5ad')
adata_GraphST = sc.read_h5ad("../GraphST/results/bc_adata.h5ad")
adata_SPIRAL = sc.read_h5ad('../SPIRAL/results/spiral_bc.h5ad')
adata_Spatialign = sc.read_h5ad("../Spatialign/results_bc/multiple_adata.h5ad")
def plot_all_umaps():
    fig, ax_list = plt.subplots(3, 7, figsize=(28, 12))
    ax_list = ax_list.flatten()
    plt.subplots_adjust(hspace=1.0, wspace=0.4)
    # ---- A 部分：UMAP 图 ----
    sc.pp.neighbors(adata_raw, use_rep='X', n_neighbors=10, random_state=666)
    sc.tl.umap(adata_raw, random_state=666)
    sc.pl.umap(adata_raw, color='batch', ax=ax_list[0], show=False)
    ax_list[0].set_title('RAW', fontsize=30)
    sc.pp.neighbors(adata_PRECAST, use_rep='PRECAST', n_neighbors=10, random_state=666)
    sc.tl.umap(adata_PRECAST, random_state=666)
    sc.pl.umap(adata_PRECAST, color='new_batch', ax=ax_list[1], show=False)
    ax_list[1].set_title('PRECAST', fontsize=30)
    sc.pp.neighbors(adata_DeepST, use_rep='DeepST_embed', n_neighbors=10, random_state=666)
    sc.tl.umap(adata_DeepST, random_state=666)
    sc.pl.umap(adata_DeepST, color='new_batch', ax=ax_list[2], show=False)
    ax_list[2].set_title('DeepST', fontsize=30)
    sc.pp.neighbors(adata_STAligner, use_rep='STAligner', n_neighbors=10, random_state=666)
    sc.tl.umap(adata_STAligner, random_state=666)
    sc.pl.umap(adata_STAligner, color='new_batch', ax=ax_list[3], show=False)
    ax_list[3].set_title('STAligner', fontsize=30)
    sc.pp.neighbors(adata_GraphST, use_rep='emb_pca', n_neighbors=10, random_state=666)
    sc.tl.umap(adata_GraphST, random_state=666)
    sc.pl.umap(adata_GraphST, color='new_batch', ax=ax_list[4], show=False)
    ax_list[4].set_title('GraphST', fontsize=30)
    sc.pp.neighbors(adata_SPIRAL, use_rep='spiral', n_neighbors=10, random_state=666)
    sc.tl.umap(adata_SPIRAL, random_state=666)
    sc.pl.umap(adata_SPIRAL, color='new_batch', ax=ax_list[5], show=False)
    ax_list[5].set_title('SPIRAL', fontsize=30)
    sc.pp.neighbors(adata_Spatialign, use_rep='correct', n_neighbors=10, random_state=666)
    sc.tl.umap(adata_Spatialign, random_state=666)
    sc.pl.umap(adata_Spatialign, color='new_batch', ax=ax_list[6], show=False)
    ax_list[6].set_title('Spatialign', fontsize=30)
    ax_list[0].text(0.05, 1.05, 'A', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[0].transAxes)
    # ---- B 部分：Clustering 对比图 ----
    sc.pl.umap(adata_raw, color='mclust', ax=ax_list[7], show=False)
    ax_list[7].set_title('RAW', fontsize=30)
    sc.pl.umap(adata_PRECAST, color='cluster', ax=ax_list[8], show=False)
    ax_list[8].set_title('PRECAST_leiden', fontsize=30)
    sc.pl.umap(adata_DeepST, color='DeepST_refine_domain', ax=ax_list[9], show=False)
    ax_list[9].set_title('DeepST', fontsize=30)
    sc.pl.umap(adata_STAligner, color='mclust', ax=ax_list[10], show=False)
    ax_list[10].set_title('STAligner_mclust', fontsize=30)
    sc.pl.umap(adata_GraphST, color='domain', ax=ax_list[11], show=False)
    ax_list[11].set_title('GraphST', fontsize=30)
    sc.pl.umap(adata_SPIRAL, color='mclust', ax=ax_list[12], show=False)
    ax_list[12].set_title('SPIRAL_mclust', fontsize=30)
    sc.pl.umap(adata_Spatialign, color='mclust', ax=ax_list[13], show=False)
    ax_list[13].set_title('Spatialign_GM', fontsize=30)
    ax_list[7].text(0.05, 1.05, 'B', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[7].transAxes)
    # ---- C 部分：spatial ----
    spot_size = 200
    sc.pl.spatial(adata_raw, color='mclust', ax=ax_list[14], spot_size=spot_size, cmap='viridis', show=False)
    ax_list[14].set_title('RAW', fontsize=30)
    sc.pl.spatial(adata_PRECAST, color='cluster', ax=ax_list[15], spot_size=spot_size, cmap='viridis', show=False)
    ax_list[15].set_title('PRECAST_leiden', fontsize=30)
    sc.pl.spatial(adata_DeepST, color='DeepST_refine_domain', ax=ax_list[16], spot_size=spot_size, cmap='viridis', show=False)
    ax_list[16].set_title('DeepST', fontsize=30)
    sc.pl.spatial(adata_STAligner, color='mclust', ax=ax_list[17], spot_size=spot_size, cmap='viridis', show=False)
    ax_list[17].set_title('STAligner_mclust', fontsize=30)
    sc.pl.spatial(adata_GraphST, color='domain', ax=ax_list[18], spot_size=spot_size, cmap='viridis', show=False)
    ax_list[18].set_title('GraphST', fontsize=30)
    sc.pl.spatial(adata_SPIRAL, color='mclust', ax=ax_list[19], spot_size=spot_size, cmap='viridis', show=False)
    ax_list[19].set_title('SPIRAL_mclust', fontsize=30)
    sc.pl.spatial(adata_Spatialign, color='mclust', ax=ax_list[20], spot_size=spot_size, cmap='viridis', show=False)
    ax_list[20].set_title('Spatialign_GM', fontsize=30)
    ax_list[14].text(0.05, 1.05, 'C', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[14].transAxes)

    handles, labels = ax_list[0].get_legend_handles_labels()
    fig.legend(handles, labels, loc='center left', bbox_to_anchor=(1.05, 0.5), ncol=1)
    plt.tight_layout(rect=[0, 0, 1, 1])
    plt.savefig('../results/umap_comparison_hbc.png')
    print('Saved all UMAP comparisons to one image.')

plot_all_umaps()


##################DLPFC-Sample5
adata_raw = sc.read_h5ad('raw_adata_7374.h5ad')
adata_PRECAST = sc.read_h5ad('../PRECAST/dlpfc/results/dlpfc_7374_seuInt_with_all_spatial.h5ad')
adata_DeepST = sc.read_h5ad("../DeepST/Results/multiple_adata_7374.h5ad")
adata_STAligner = sc.read_h5ad('../STAligner/results/staligner_Sample_DLPFC_7374.h5ad')
adata_GraphST = sc.read_h5ad("../GraphST/results/DLPFC_7374_adata.h5ad")
adata_SPIRAL = sc.read_h5ad('../SPIRAL/results/spiral_Sample_DLPFC_7374.h5ad')
adata_STitch3D = sc.read_h5ad("../STitch3D/results_dlpfc1/DLPFC_7374_adata.h5ad")
adata_Spatialign = sc.read_h5ad("../Spatialign/results_dlpfc1/multiple_adata_7374.h5ad")
def create_layer_palette(adata):
    if 'layer' in adata.obs:
        return sns.color_palette("Set2", n_colors=len(adata.obs['layer'].unique()))
    else:
        print(f"No 'layer' column found in {adata}. Using default palette.")
        return sns.color_palette("Set2", n_colors=10)  # Default to 10 colors if 'layer' is missing

def plot_all_umaps():
    spot_size=100
    fig, ax_list = plt.subplots(4, 8, figsize=(40, 20))
    ax_list = ax_list.flatten()
    plt.subplots_adjust(hspace=1.0, wspace=0.4)
    # ---- A 部分：UMAP 图 ----
    sc.pp.neighbors(adata_raw, use_rep='X', random_state=666)
    sc.tl.umap(adata_raw, random_state=666)
    sc.pl.umap(adata_raw, color='new_batch', title='RAW', ax=ax_list[0], show=False)
    ax_list[0].set_title('RAW', fontsize=30)
    sc.pp.neighbors(adata_PRECAST, use_rep='PRECAST', random_state=666)
    sc.tl.umap(adata_PRECAST, random_state=666)
    sc.pl.umap(adata_PRECAST, color='new_batch', ax=ax_list[1], title='PRECAST', show=False)
    ax_list[1].set_title('PRECAST', fontsize=30)
    sc.pp.neighbors(adata_DeepST, use_rep='DeepST_embed', random_state=666)
    sc.tl.umap(adata_DeepST, random_state=666)
    sc.pl.umap(adata_DeepST, color='new_batch', ax=ax_list[2], title='DeepST', show=False)
    ax_list[2].set_title('DeepST', fontsize=30)
    sc.pp.neighbors(adata_STAligner, use_rep='STAligner', random_state=666)
    sc.tl.umap(adata_STAligner, random_state=666)
    sc.pl.umap(adata_STAligner, color='new_batch', title='STAligner', ax=ax_list[3], show=False)
    ax_list[3].set_title('STAligner', fontsize=30)
    sc.pp.neighbors(adata_GraphST, use_rep='emb_pca', n_neighbors=10, random_state=666)
    sc.tl.umap(adata_GraphST, random_state=666)
    sc.pl.umap(adata_GraphST, color='new_batch', ax=ax_list[4], title='GraphST', show=False)
    ax_list[4].set_title('GraphST', fontsize=30)
    sc.pp.neighbors(adata_SPIRAL, use_rep='spiral', random_state=666)
    sc.tl.umap(adata_SPIRAL, random_state=666)
    sc.pl.umap(adata_SPIRAL, color='new_batch', ax=ax_list[5], title='SPIRAL', show=False)
    ax_list[5].set_title('SPIRAL', fontsize=30)
    sc.pp.neighbors(adata_STitch3D, use_rep='latent', n_neighbors=30, random_state=666)
    adata_STitch3D.obsm['X_umap'] = reducer.fit_transform(adata_STitch3D.obsm['latent'])
    sc.pl.umap(adata_STitch3D, color='batch', title='STitch3D', ax=ax_list[6], show=False)
    ax_list[6].set_title('STitch3D', fontsize=30)
    sc.pp.neighbors(adata_Spatialign, use_rep='correct', random_state=666)
    sc.tl.umap(adata_Spatialign, random_state=666)
    sc.pl.umap(adata_Spatialign, color='new_batch', ax=ax_list[7], title='Spatialign', show=False)
    ax_list[7].set_title('Spatialign', fontsize=30)
    ax_list[0].text(0.05, 1.05, 'A', ha='center', va='bottom', fontsize=30, fontweight='bold', transform=ax_list[0].transAxes)
    # ---- B 部分：Layer 对比图 ----
    layer_palette_raw = create_layer_palette(adata_raw)
    layer_palette_PRECAST = create_layer_palette(adata_PRECAST)
    layer_palette_DeepST = create_layer_palette(adata_DeepST)
    layer_palette_STAligner = create_layer_palette(adata_STAligner)
    layer_palette_GraphST = create_layer_palette(adata_GraphST)
    layer_palette_SPIRAL = create_layer_palette(adata_SPIRAL)
    layer_palette_STitch3D = create_layer_palette(adata_STitch3D)
    layer_palette_Spatialign = create_layer_palette(adata_Spatialign)
    sc.pl.umap(adata_raw, color='ground_truth', ax=ax_list[8], palette=layer_palette_raw, title='RAW', show=False)
    ax_list[8].set_title('RAW', fontsize=30)
    sc.pl.umap(adata_PRECAST, color='Ground_Truth', ax=ax_list[9], palette=layer_palette_PRECAST, title='PRECAST', show=False)
    ax_list[9].set_title('PRECAST', fontsize=30)
    sc.pl.umap(adata_DeepST, color='ground_truth', ax=ax_list[10], palette=layer_palette_DeepST, title='DeepST', show=False)
    ax_list[10].set_title('DeepST', fontsize=30)
    sc.pl.umap(adata_STAligner, color='ground_truth', ax=ax_list[11], palette=layer_palette_STAligner, title='STAligner', show=False)
    ax_list[11].set_title('STAligner', fontsize=30)
    sc.pl.umap(adata_GraphST, color='ground_truth', ax=ax_list[12], palette=layer_palette_GraphST, title='GraphST', show=False)
    ax_list[12].set_title('GraphST', fontsize=30)
    sc.pl.umap(adata_SPIRAL, color='ground_truth', ax=ax_list[13], palette=layer_palette_SPIRAL, title='SPIRAL', show=False)
    ax_list[13].set_title('SPIRAL', fontsize=30)
    sc.pl.umap(adata_STitch3D, color='ground_truth', ax=ax_list[14], palette=layer_palette_STitch3D, title='STitch3D', show=False)
    ax_list[14].set_title('STitch3D', fontsize=30)
    sc.pl.umap(adata_Spatialign, color='celltype', ax=ax_list[15], palette=layer_palette_Spatialign, title='Spatialign', show=False)
    ax_list[15].set_title('Spatialign', fontsize=30)
    ax_list[8].text(0.05, 1.05, 'B', ha='center', va='bottom', fontsize=30, fontweight='bold', transform=ax_list[8].transAxes)
    # ---- C 部分：Clustering 对比图 ----
    sc.pl.umap(adata_raw, color='mclust', ax=ax_list[16], title='RAW', show=False)
    ax_list[16].set_title('RAW', fontsize=30)
    sc.pl.umap(adata_PRECAST, color='cluster', ax=ax_list[17], title='PRECAST_leiden', show=False)
    ax_list[17].set_title('PRECAST_leiden', fontsize=30)
    sc.pl.umap(adata_DeepST, color='DeepST_refine_domain', ax=ax_list[18], title='DeepST', show=False)
    ax_list[18].set_title('DeepST', fontsize=30)
    sc.pl.umap(adata_STAligner, color='mclust', ax=ax_list[19], title='STAligner_mclust', show=False)
    ax_list[19].set_title('STAligner_mclust', fontsize=30)
    sc.pl.umap(adata_GraphST, color='domain', ax=ax_list[20], title='GraphST', show=False)
    ax_list[20].set_title('GraphST', fontsize=30)
    sc.pl.umap(adata_SPIRAL, color='mclust', ax=ax_list[21], title='SPIRAL_mclust', show=False)
    ax_list[21].set_title('SPIRAL_mclust', fontsize=30)
    sc.pl.umap(adata_STitch3D, color='Cluster', ax=ax_list[22], title='STitch3D_GM', show=False)
    ax_list[22].set_title('STitch3D_GM', fontsize=30)
    sc.pl.umap(adata_Spatialign, color='mclust', ax=ax_list[23], title='Spatialign_GM', show=False)
    ax_list[23].set_title('Spatialign_GM', fontsize=30)
    ax_list[16].text(0.05, 1.05, 'C', ha='center', va='bottom', fontsize=30, fontweight='bold', transform=ax_list[16].transAxes)
    # ---- D 部分：saptial 对比图 ----
    sc.pl.spatial(adata_raw, color='mclust', ax=ax_list[24], title='RAW', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[24].set_title('RAW', fontsize=30)
    sc.pl.spatial(adata_PRECAST, color='cluster', ax=ax_list[25], title='PRECAST', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[25].set_title('PRECAST', fontsize=30)
    sc.pl.spatial(adata_DeepST, color='DeepST_refine_domain', ax=ax_list[26], title='DeepST', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[26].set_title('DeepST', fontsize=30)
    sc.pl.spatial(adata_STAligner, color='mclust', ax=ax_list[27], title='STAligner', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[27].set_title('STAligner', fontsize=30)
    sc.pl.spatial(adata_GraphST, color='domain', ax=ax_list[28], title='GraphST', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[28].set_title('GraphST', fontsize=30)
    sc.pl.spatial(adata_SPIRAL, color='mclust', ax=ax_list[29], title='SPIRAL', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[29].set_title('SPIRAL', fontsize=30)
    sc.pl.spatial(adata_STitch3D, color='Cluster', ax=ax_list[30], title='STitch3D', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[30].set_title('STitch3D', fontsize=30)
    sc.pl.spatial(adata_Spatialign, color='mclust', ax=ax_list[31], title='Spatialign', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[31].set_title('Spatialign', fontsize=30)
    ax_list[24].text(0.05, 1.05, 'D', ha='center', va='bottom', fontsize=30, fontweight='bold', transform=ax_list[24].transAxes)
    handles, labels = ax_list[0].get_legend_handles_labels()
    fig.legend(handles, labels, loc='center left', bbox_to_anchor=(1.05, 0.5), ncol=1)
    plt.tight_layout(rect=[0, 0, 1, 1])
    plt.savefig('../results/umap_comparisonDLPFC_7374.png')
    print('Saved all UMAP comparisons to one image.')

plot_all_umaps()


##################DLPFC-Sample1+2+3 Sample6
adata_raw=sc.read_h5ad('raw_adata_all.h5ad')
adata_PRECAST = sc.read_h5ad('../PRECAST/dlpfc/results/dlpfc_all_seuInt_with_all_spatial.h5ad')
adata_DeepST = ad.read_h5ad("../DeepST/Results/all_multiple_adata.h5ad")
adata_STAligner = sc.read_h5ad('../STAligner/results/staligner_all_DLPFC.h5ad')
adata_GraphST = ad.read_h5ad("../GraphST/results/all_DLPFC_adata.h5ad")
adata_SPIRAL = sc.read_h5ad('../SPIRAL/results/spiral_Sample_DLPFC_all.h5ad')
adata_STitch3D = ad.read_h5ad("../STitch3D/results_dlpfc_all/all_DLPFC_adata.h5ad")
adata_Spatialign = sc.read_h5ad("../Spatialign/results_dlpfc_all/multiple_adata.h5ad")
def create_layer_palette(adata):
    if 'layer' in adata.obs:
        return sns.color_palette("Set2", n_colors=len(adata.obs['layer'].unique()))
    else:
        print(f"No 'layer' column found in {adata}. Using default palette.")
        return sns.color_palette("Set2", n_colors=10)  # Default to 10 colors if 'layer' is missing

def plot_all_umaps():
    fig, ax_list = plt.subplots(4, 8, figsize=(40, 20))
    ax_list = ax_list.flatten()
    plt.subplots_adjust(hspace=1.0, wspace=0.4)
    # ---- A 部分：UMAP 图 ----
    sc.pp.neighbors(adata_raw, use_rep='X', random_state=666)
    sc.tl.umap(adata_raw, random_state=666)
    sc.pl.umap(adata_raw, color='batch_name', ax=ax_list[0], show=False, fontsize=30)
    ax_list[0].set_title('RAW', fontsize=30)
    sc.pp.neighbors(adata_PRECAST, use_rep='PRECAST', random_state=666)
    sc.tl.umap(adata_PRECAST, random_state=666)
    sc.pl.umap(adata_PRECAST, color='sample_group', ax=ax_list[1], show=False, fontsize=30)
    ax_list[1].set_title('PRECAST', fontsize=30)
    sc.pp.neighbors(adata_DeepST, use_rep='DeepST_embed', random_state=666)
    sc.tl.umap(adata_DeepST, random_state=666)
    sc.pl.umap(adata_DeepST, color='sample_name', ax=ax_list[2], show=False, fontsize=30)
    ax_list[2].set_title('DeepST', fontsize=30)
    sc.pp.neighbors(adata_STAligner, use_rep='STAligner', random_state=666)
    sc.tl.umap(adata_STAligner, random_state=666)
    sc.pl.umap(adata_STAligner, color='batch_name', ax=ax_list[3], show=False, fontsize=30)
    ax_list[3].set_title('STAligner', fontsize=30)
    sc.pp.neighbors(adata_GraphST, use_rep='emb_pca', n_neighbors=10, random_state=666)
    sc.tl.umap(adata_GraphST, random_state=666)
    sc.pl.umap(adata_GraphST, color='batch_name', ax=ax_list[4], show=False, fontsize=30)
    ax_list[4].set_title('GraphST', fontsize=30)
    sc.pp.neighbors(adata_SPIRAL, use_rep='spiral', random_state=666)
    sc.tl.umap(adata_SPIRAL, random_state=666)
    sc.pl.umap(adata_SPIRAL, color='batch_name', ax=ax_list[5], show=False, fontsize=30)
    ax_list[5].set_title('SPIRAL', fontsize=30)
    sc.pp.neighbors(adata_STitch3D, use_rep='latent', n_neighbors=30, random_state=666)
    adata_STitch3D.obsm['X_umap'] = reducer.fit_transform(adata_STitch3D.obsm['latent'])
    sc.pl.umap(adata_STitch3D, color='batch_name', ax=ax_list[6], show=False, fontsize=30)
    ax_list[6].set_title('STitch3D', fontsize=30)
    sc.pp.neighbors(adata_Spatialign, use_rep='correct', random_state=666)
    sc.tl.umap(adata_Spatialign, random_state=666)
    sc.pl.umap(adata_Spatialign, color='new_batch', ax=ax_list[7], show=False, fontsize=30)
    ax_list[7].set_title('Spatialign', fontsize=30)
    ax_list[0].text(0.05, 1.05, 'A', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[0].transAxes)
    # ---- B 部分：Layer 对比图 ----
    layer_palette_raw = create_layer_palette(adata_raw)
    layer_palette_PRECAST = create_layer_palette(adata_PRECAST)
    layer_palette_DeepST = create_layer_palette(adata_DeepST)
    layer_palette_STAligner = create_layer_palette(adata_STAligner)
    layer_palette_GraphST = create_layer_palette(adata_GraphST)
    layer_palette_SPIRAL = create_layer_palette(adata_SPIRAL)
    layer_palette_STitch3D = create_layer_palette(adata_STitch3D)
    layer_palette_Spatialign = create_layer_palette(adata_Spatialign)
    sc.pl.umap(adata_raw, color='celltype', ax=ax_list[8], palette=layer_palette_raw, show=False, fontsize=30)
    ax_list[8].set_title('RAW', fontsize=30)
    sc.pl.umap(adata_PRECAST, color='Ground_Truth', ax=ax_list[9], palette=layer_palette_PRECAST, show=False, fontsize=30)
    ax_list[9].set_title('PRECAST', fontsize=30)
    sc.pl.umap(adata_DeepST, color='ground_truth', ax=ax_list[10], palette=layer_palette_DeepST, show=False, fontsize=30)
    ax_list[10].set_title('DeepST', fontsize=30)
    sc.pl.umap(adata_STAligner, color='Ground_Truth', ax=ax_list[11], palette=layer_palette_STAligner, show=False, fontsize=30)
    ax_list[11].set_title('STAligner', fontsize=30)
    sc.pl.umap(adata_GraphST, color='ground_truth', ax=ax_list[12], palette=layer_palette_GraphST, show=False, fontsize=30)
    ax_list[12].set_title('GraphST', fontsize=30)
    sc.pl.umap(adata_SPIRAL, color='celltype', ax=ax_list[13], palette=layer_palette_SPIRAL, show=False, fontsize=30)
    ax_list[13].set_title('SPIRAL', fontsize=30)
    sc.pl.umap(adata_STitch3D, color='layer', ax=ax_list[14], palette=layer_palette_STitch3D, show=False, fontsize=30)
    ax_list[14].set_title('STitch3D', fontsize=30)
    sc.pl.umap(adata_Spatialign, color='celltype', ax=ax_list[15], palette=layer_palette_Spatialign, show=False, fontsize=30)
    ax_list[15].set_title('Spatialign', fontsize=30)
    ax_list[8].text(0.05, 1.05, 'B', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[8].transAxes)
    # ---- C 部分：Clustering 对比图 ----
    sc.pl.umap(adata_raw, color='mclust', ax=ax_list[16], show=False, fontsize=30)
    ax_list[16].set_title('RAW', fontsize=30)
    sc.pl.umap(adata_PRECAST, color='cluster', ax=ax_list[17], show=False, fontsize=30)
    ax_list[17].set_title('PRECAST_leiden', fontsize=30)
    sc.pl.umap(adata_DeepST, color='DeepST_refine_domain', ax=ax_list[18], show=False, fontsize=30)
    ax_list[18].set_title('DeepST', fontsize=30)
    sc.pl.umap(adata_STAligner, color='mclust', ax=ax_list[19], show=False, fontsize=30)
    ax_list[19].set_title('STAligner_mclust', fontsize=30)
    sc.pl.umap(adata_GraphST, color='domain', ax=ax_list[20], show=False, fontsize=30)
    ax_list[20].set_title('GraphST', fontsize=30)
    sc.pl.umap(adata_SPIRAL, color='mclust', ax=ax_list[21], show=False, fontsize=30)
    ax_list[21].set_title('SPIRAL_mclust', fontsize=30)
    sc.pl.umap(adata_STitch3D, color='Cluster', ax=ax_list[22], show=False, fontsize=30)
    ax_list[22].set_title('STitch3D_GM', fontsize=30)
    sc.pl.umap(adata_Spatialign, color='mclust', ax=ax_list[23], show=False, fontsize=30)
    ax_list[23].set_title('Spatialign_GM', fontsize=30)
    ax_list[16].text(0.05, 1.05, 'C', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[16].transAxes)
    # ---- D spatial 对比图 ----
    spot_size=100
    sc.pl.spatial(adata_raw, color='mclust', ax=ax_list[24], spot_size=spot_size, cmap='viridis', show=False, fontsize=30)
    ax_list[24].set_title('RAW', fontsize=30)
    sc.pl.spatial(adata_PRECAST, color='cluster', ax=ax_list[25], spot_size=spot_size, cmap='viridis', show=False, fontsize=30)
    ax_list[25].set_title('PRECAST_leiden', fontsize=30)
    sc.pl.spatial(adata_DeepST, color='DeepST_refine_domain', ax=ax_list[26], spot_size=spot_size, cmap='viridis', show=False, fontsize=30)
    ax_list[26].set_title('DeepST', fontsize=30)
    sc.pl.spatial(adata_STAligner, color='mclust', ax=ax_list[27], spot_size=spot_size, cmap='viridis', show=False, fontsize=30)
    ax_list[27].set_title('STAligner_mclust', fontsize=30)
    sc.pl.spatial(adata_GraphST, color='domain', ax=ax_list[28], spot_size=spot_size, cmap='viridis', show=False, fontsize=30)
    ax_list[28].set_title('GraphST', fontsize=30)
    sc.pl.spatial(adata_SPIRAL, color='mclust', ax=ax_list[29], spot_size=spot_size, cmap='viridis', show=False, fontsize=30)
    ax_list[29].set_title('SPIRAL_mclust', fontsize=30)
    sc.pl.spatial(adata_STitch3D, color='Cluster', ax=ax_list[30], spot_size=spot_size, cmap='viridis', show=False, fontsize=30)
    ax_list[30].set_title('STitch3D_GM', fontsize=30)
    sc.pl.spatial(adata_Spatialign, color='mclust', ax=ax_list[31], spot_size=spot_size, cmap='viridis', show=False, fontsize=30)
    ax_list[31].set_title('Spatialign_GM', fontsize=30)
    ax_list[24].text(0.05, 1.05, 'D', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[24].transAxes)
    handles, labels = ax_list[0].get_legend_handles_labels()
    fig.legend(handles, labels, loc='center left', bbox_to_anchor=(1.05, 0.5), ncol=1)
    plt.tight_layout(rect=[0, 0, 1, 1])
    plt.savefig('../results/umap_comparison_allDLPFC.png')
    print('Saved all UMAP comparisons to one image.')

plot_all_umaps()


##################mouse coronal brain-Sample7
adata_raw=sc.read_h5ad('raw_adata_coronal.h5ad')
adata_PRECAST = sc.read_h5ad('../PRECAST/coronal/results/bc_seuInt_with_spatial.h5ad')
adata_DeepST = sc.read_h5ad("../DeepST/results_coronal/adata_DeepST.h5ad")
adata_STAligner = sc.read_h5ad('../STAligner/results/staligner_coronal.h5ad')
adata_GraphST = sc.read_h5ad("../GraphST/results/coronal_adata.h5ad")
adata_SPIRAL = sc.read_h5ad('../SPIRAL/results/spiral_coronal.h5ad')
adata_Spatialign = sc.read_h5ad("../Spatialign/results_coronal/multiple_adata.h5ad")
def create_layer_palette(adata):
    if 'layer' in adata.obs:
        return sns.color_palette("Paired", n_colors=12)  # Paired调色板包含12种颜色
    else:
        print(f"No 'layer' column found in {adata}. Using default palette.")
        return sns.color_palette("Paired", n_colors=12)  # 默认使用12种颜色

def plot_all_umaps():
    spot_size = 300
    fig, ax_list = plt.subplots(4, 7, figsize=(35, 20))
    ax_list = ax_list.flatten()
    plt.subplots_adjust(hspace=1.0, wspace=0.4)
    # ---- A 部分：UMAP 图 ----
    sc.pp.neighbors(adata_raw, use_rep='X', random_state=666)
    sc.tl.umap(adata_raw, random_state=666)
    sc.pl.umap(adata_raw, color='batch', title='RAW', ax=ax_list[0], show=False)
    ax_list[0].set_title('RAW', fontsize=30)
    
    sc.pp.neighbors(adata_PRECAST, use_rep='PRECAST', random_state=666)
    sc.tl.umap(adata_PRECAST, random_state=666)
    sc.pl.umap(adata_PRECAST, color='new_batch', ax=ax_list[1], title='PRECAST', show=False)
    ax_list[1].set_title('PRECAST', fontsize=30)
    
    sc.pp.neighbors(adata_DeepST, use_rep='DeepST_embed', random_state=666)
    sc.tl.umap(adata_DeepST, random_state=666)
    sc.pl.umap(adata_DeepST, color='new_batch', ax=ax_list[2], title='DeepST', show=False)
    ax_list[2].set_title('DeepST', fontsize=30)
    
    sc.pp.neighbors(adata_STAligner, use_rep='STAligner', random_state=666)
    sc.tl.umap(adata_STAligner, random_state=666)
    sc.pl.umap(adata_STAligner, color='new_batch', title='STAligner', ax=ax_list[3], show=False)
    ax_list[3].set_title('STAligner', fontsize=30)
    
    sc.pp.neighbors(adata_GraphST, use_rep='emb_pca', n_neighbors=10, random_state=666)
    sc.tl.umap(adata_GraphST, random_state=666)
    sc.pl.umap(adata_GraphST, color='new_batch', ax=ax_list[4], title='GraphST', show=False)
    ax_list[4].set_title('GraphST', fontsize=30)
    sc.pp.neighbors(adata_SPIRAL, use_rep='spiral', random_state=666)
    sc.tl.umap(adata_SPIRAL, random_state=666)
    sc.pl.umap(adata_SPIRAL, color='new_batch', ax=ax_list[5], title='SPIRAL', show=False)
    ax_list[5].set_title('SPIRAL', fontsize=30)    
    sc.pp.neighbors(adata_Spatialign, use_rep='correct', random_state=666)
    sc.tl.umap(adata_Spatialign, random_state=666)
    sc.pl.umap(adata_Spatialign, color='new_batch', ax=ax_list[6], title='Spatialign', show=False)
    ax_list[6].set_title('Spatialign', fontsize=30)
    ax_list[0].text(0.05, 1.05, 'A', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[0].transAxes)
    # ---- B 部分：Layer 对比图 ----
    layer_palette_raw = create_layer_palette(adata_raw)
    layer_palette_PRECAST = create_layer_palette(adata_PRECAST)
    layer_palette_DeepST = create_layer_palette(adata_DeepST)
    layer_palette_STAligner = create_layer_palette(adata_STAligner)
    layer_palette_GraphST = create_layer_palette(adata_GraphST)
    layer_palette_SPIRAL = create_layer_palette(adata_SPIRAL)
    layer_palette_Spatialign = create_layer_palette(adata_Spatialign)
    
    sc.pl.umap(adata_raw, color='ground_truth', ax=ax_list[7], palette=layer_palette_raw, title='RAW', show=False)
    ax_list[7].set_title('RAW', fontsize=30)
    
    sc.pl.umap(adata_PRECAST, color='ground_truth', ax=ax_list[8], palette=layer_palette_PRECAST, title='PRECAST', show=False)
    ax_list[8].set_title('PRECAST', fontsize=30)
    
    sc.pl.umap(adata_DeepST, color='ground_truth', ax=ax_list[9], palette=layer_palette_DeepST, title='DeepST', show=False)
    ax_list[9].set_title('DeepST', fontsize=30)
    
    sc.pl.umap(adata_STAligner, color='ground_truth', ax=ax_list[10], palette=layer_palette_STAligner, title='STAligner', show=False)
    ax_list[10].set_title('STAligner', fontsize=30)
    
    sc.pl.umap(adata_GraphST, color='ground_truth', ax=ax_list[11], palette=layer_palette_GraphST, title='GraphST', show=False)
    ax_list[11].set_title('GraphST', fontsize=30)
    
    sc.pl.umap(adata_SPIRAL, color='ground_truth', ax=ax_list[12], palette=layer_palette_SPIRAL, title='SPIRAL', show=False)
    ax_list[12].set_title('SPIRAL', fontsize=30)
    
    sc.pl.umap(adata_Spatialign, color='ground_truth', ax=ax_list[13], palette=layer_palette_Spatialign, title='Spatialign', show=False)
    ax_list[13].set_title('Spatialign', fontsize=30)
    
    ax_list[7].text(0.05, 1.05, 'B', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[7].transAxes)
    # ---- C 部分：Clustering 对比图 ----
    sc.pl.umap(adata_raw, color='mclust', ax=ax_list[14], title='RAW', show=False)
    ax_list[14].set_title('RAW', fontsize=30)
    
    sc.pl.umap(adata_PRECAST, color='cluster', ax=ax_list[15], title='PRECAST_leiden', show=False)
    ax_list[15].set_title('PRECAST_leiden', fontsize=30)
    
    sc.pl.umap(adata_DeepST, color='DeepST_refine_domain', ax=ax_list[16], title='DeepST', show=False)
    ax_list[16].set_title('DeepST', fontsize=30)
    
    sc.pl.umap(adata_STAligner, color='mclust', ax=ax_list[17], title='STAligner_mclust', show=False)
    ax_list[17].set_title('STAligner_mclust', fontsize=30)
    
    sc.pl.umap(adata_GraphST, color='domain', ax=ax_list[18], title='GraphST', show=False)
    ax_list[18].set_title('GraphST', fontsize=30)
    
    sc.pl.umap(adata_SPIRAL, color='mclust', ax=ax_list[19], title='SPIRAL_mclust', show=False)
    ax_list[19].set_title('SPIRAL_mclust', fontsize=30)
    
    sc.pl.umap(adata_Spatialign, color='mclust', ax=ax_list[20], title='Spatialign_GM', show=False)
    ax_list[20].set_title('Spatialign_GM', fontsize=30)
    
    ax_list[14].text(0.05, 1.05, 'C', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[14].transAxes)
    # ---- D 部分：spatial 对比图 ----
    sc.pl.spatial(adata_raw, color='mclust', ax=ax_list[21], title='RAW', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[21].set_title('RAW', fontsize=30)
    
    sc.pl.spatial(adata_PRECAST, color='cluster', ax=ax_list[22], title='PRECAST', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[22].set_title('PRECAST', fontsize=30)
    
    sc.pl.spatial(adata_DeepST, color='DeepST_refine_domain', ax=ax_list[23], title='DeepST', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[23].set_title('DeepST', fontsize=30)
    
    sc.pl.spatial(adata_STAligner, color='mclust', ax=ax_list[24], title='STAligner', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[24].set_title('STAligner', fontsize=30)
    
    sc.pl.spatial(adata_GraphST, color='domain', ax=ax_list[25], title='GraphST', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[25].set_title('GraphST', fontsize=30)
    
    sc.pl.spatial(adata_SPIRAL, color='mclust', ax=ax_list[26], title='SPIRAL', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[26].set_title('SPIRAL', fontsize=30)
    
    sc.pl.spatial(adata_Spatialign, color='mclust', ax=ax_list[27], title='Spatialign', spot_size=spot_size, cmap='viridis', show=False)
    ax_list[27].set_title('Spatialign', fontsize=30)
    
    ax_list[21].text(0.05, 1.05, 'D', ha='center', va='bottom', fontsize=32, fontweight='bold', transform=ax_list[21].transAxes)
    
    handles, labels = ax_list[0].get_legend_handles_labels()
    fig.legend(handles, labels, loc='center left', bbox_to_anchor=(1.05, 0.5), ncol=1)
    plt.tight_layout(rect=[0, 0, 1, 1])
    plt.savefig('../results/umap_comparison_coronal.png')
    print('Saved all UMAP comparisons to one image.')

plot_all_umaps()


##################mouse olfactory bulb-Sample8
fig, ax_list = plt.subplots(3, 5, figsize=(20, 12))  
ax_list = ax_list.flatten()  
plt.subplots_adjust(hspace=0.5, wspace=0.4) 
adata_raw = sc.read_h5ad('raw_adata_mob.h5ad')
adata_STAligner = sc.read_h5ad('../STAligner/results/staligner_mob3.h5ad')
adata_GraphST = sc.read_h5ad("../GraphST/results/mob_adata.h5ad")
adata_SPIRAL = sc.read_h5ad('../SPIRAL/results/spiral_mob3.h5ad')
adata_Spatialign = sc.read_h5ad("../Spatialign/results_mob/multiple_adata.h5ad")
######### 第一行：UMAP 图 #########
sc.tl.pca(adata_raw, n_comps=100, random_state=666)
sc.pp.neighbors(adata_raw, use_rep='X_pca', n_neighbors=10, random_state=666)
sc.tl.umap(adata_raw, random_state=666)
sc.pl.umap(adata_raw, color='slice_name', title='RAW', ax=ax_list[0], show=False)

sc.pp.neighbors(adata_STAligner, use_rep='STAligner', n_neighbors=10, random_state=666)
sc.tl.umap(adata_STAligner, random_state=666)
sc.pl.umap(adata_STAligner, color='batch_name', title='STAligner', ax=ax_list[1], show=False)

sc.pp.neighbors(adata_GraphST, use_rep='emb_pca', n_neighbors=10, random_state=666)
sc.tl.umap(adata_GraphST, random_state=666)
sc.pl.umap(adata_GraphST, color='new_batch', ax=ax_list[2], title='GraphST', show=False)

sc.pp.neighbors(adata_SPIRAL, use_rep='spiral', n_neighbors=10, random_state=666)
sc.tl.umap(adata_SPIRAL, random_state=666)
sc.pl.umap(adata_SPIRAL, color='batch', ax=ax_list[3], title='SPIRAL', show=False)

sc.pp.neighbors(adata_Spatialign, use_rep='correct',n_neighbors=10, random_state=666)
sc.tl.umap(adata_Spatialign, random_state=666)
sc.pl.umap(adata_Spatialign, color='new_batch', ax=ax_list[4], title='spatiAlign', show=False)

######### 第二行：聚类结果 UMAP #########
sc.pl.umap(adata_raw, color='mclust', title='RAW', ax=ax_list[5], show=False)
sc.pl.umap(adata_STAligner, color='louvain', title='STAligner', ax=ax_list[6], show=False)
sc.pl.umap(adata_GraphST, color='domain', ax=ax_list[7], title='GraphST', show=False)
sc.pl.umap(adata_SPIRAL, color='SPIRAL', ax=ax_list[8], title='SPIRAL', show=False)
sc.pl.umap(adata_Spatialign, color='louvain', ax=ax_list[9], title='spatiAlign', show=False)

######### 第3行：spatial#########
spot_size=200
sc.pl.spatial(adata_raw, color='mclust', title='RAW', ax=ax_list[10], spot_size=spot_size, cmap='viridis', show=False)
sc.pl.spatial(adata_STAligner, color='louvain', title='STAligner', spot_size=spot_size, cmap='viridis', ax=ax_list[11], show=False)
sc.pl.spatial(adata_GraphST, color='domain', ax=ax_list[12], title='GraphST', spot_size=spot_size, cmap='viridis', show=False)
sc.pl.spatial(adata_SPIRAL, color='SPIRAL', ax=ax_list[13], title='SPIRAL', spot_size=spot_size, cmap='viridis', show=False)
sc.pl.spatial(adata_Spatialign, color='louvain', ax=ax_list[14], title='spatiAlign', spot_size=spot_size, cmap='viridis', show=False)

# Set titles for each subplot
ax_list[0].set_title('RAW', fontsize=30)
ax_list[1].set_title('STAligner', fontsize=30)
ax_list[2].set_title('GraphST', fontsize=30)
ax_list[3].set_title('SPIRAL', fontsize=30)
ax_list[4].set_title('spatiAlign', fontsize=30)
ax_list[5].set_title('RAW', fontsize=30)
ax_list[6].set_title('STAligner', fontsize=30)
ax_list[7].set_title('GraphST', fontsize=30)
ax_list[8].set_title('SPIRAL', fontsize=30)
ax_list[9].set_title('spatiAlign', fontsize=30)
ax_list[10].set_title('RAW', fontsize=30)
ax_list[11].set_title('STAligner', fontsize=30)
ax_list[12].set_title('GraphST', fontsize=30)
ax_list[13].set_title('SPIRAL', fontsize=30)
ax_list[14].set_title('spatiAlign', fontsize=30)

ax_list[0].text(-0.1, 1.1, 'A', transform=ax_list[0].transAxes, fontsize=32, fontweight='bold', color='black')
ax_list[5].text(-0.1, 1.1, 'B', transform=ax_list[5].transAxes, fontsize=32, fontweight='bold', color='black')
ax_list[10].text(-0.1, 1.1, 'C', transform=ax_list[10].transAxes, fontsize=32, fontweight='bold', color='black')

handles, labels = ax_list[0].get_legend_handles_labels()
fig.legend(handles, labels, loc='center left', bbox_to_anchor=(1.05, 0.5), ncol=1)
plt.tight_layout(rect=[0, 0, 1, 1])
plt.savefig('../results/umap_comparison_mob.png')
plt.close()





